{"version":3,"sources":["engine/CerosEngine.ts","engine/AssetManager.ts","engine/entity/BaseEntity.ts","engine/entity/Tree.ts","engine/entity/Rock.ts","engine/entity/JumpRamp.ts","engine/entity/TreeCluster.ts","engine/entity/Skier.ts","engine/collision/Hitbox.ts","engine/Scene.ts","app.ts","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"app.c61986b1.js","sourceRoot":"..","sourcesContent":["import { IGameEngine, IAssetManager, IGameScene } from \"./engine.interface\";\r\nimport { Scene } from \"./Scene\";\r\n\r\n/**\r\n * @author Okeowo Aderemi\r\n * @description  CerosEngine handles most of the core gaming functionality, the game loop and the render operation and also setup the Canvas\r\n * dom if not present in the body\r\n */\r\ndeclare var $;\r\n\r\nvar skierDirection = 5;\r\nvar skierMapX = 0;\r\nvar skierMapY = 0;\r\nvar skierSpeed = 8;\r\nexport class CerosEngine implements IGameEngine {\r\n\r\n\r\n    private _debug = false; // This allows us to toggle the debugging mode for internal information if needed\r\n    private _gpu: CanvasRenderingContext2D; // Canvas 2D Context \r\n    private _stage: HTMLCanvasElement // Keeps copy of the Canvas DOM element to read height and width if neccessary\r\n    private _gameWidth: number;\r\n    private _gameHeight: number;\r\n    private _scene: Scene;\r\n    assetManager: IAssetManager;\r\n    audioManager?: any;\r\n\r\n    public get gpu(): CanvasRenderingContext2D {\r\n        if (!this._gpu) // Context 2D not set inform user about the message\r\n        {\r\n            if (this.isDebug) {\r\n                console.error('Canvas 2D Content was not set, check implementation in the code');\r\n            }\r\n        }\r\n        return this._gpu;\r\n    }\r\n\r\n    public get dimension() {\r\n        return {\r\n            w: this._gameWidth,\r\n            h: this._gameHeight\r\n        };\r\n    }\r\n\r\n    public get stage() {\r\n        return this._stage;\r\n    }\r\n\r\n    public get isDebug() {\r\n        return this._debug;\r\n    }\r\n\r\n\r\n    setScene(scene: Scene){\r\n        this._scene = scene;\r\n    }\r\n\r\n\r\n    init(scene: Scene) {\r\n        // Check if there is a canvas in the document and if not create one for the engine\r\n        this.setScene(scene);\r\n        this._scene.setEngine(this);\r\n        this._configureViewPort();\r\n        this.bindInput();\r\n        this.render();\r\n        \r\n    }\r\n\r\n    _configureViewPort() {\r\n        // This handles viewport information and setting up of the window for our engine\r\n        this._gameHeight = window.innerHeight;\r\n        this._gameWidth = window.innerWidth;\r\n\r\n        // Do we have any canvas if not give us one\r\n        var canvasElement = document.getElementsByTagName('canvas').length ? document.getElementsByTagName('canvas').item(0) : document.createElement('canvas');\r\n        canvasElement.className = 'ceros-engine';\r\n        // Set the width of the canvas\r\n        $(canvasElement).attr('width', this._gameWidth * window.devicePixelRatio)\r\n            .attr('height', this._gameHeight * window.devicePixelRatio)\r\n            .css({\r\n                width: this._gameWidth + 'px',\r\n                height: this._gameHeight + 'px'\r\n            });\r\n        document.body.appendChild(canvasElement);\r\n        this._stage = canvasElement;\r\n        this._gpu = canvasElement.getContext('2d');\r\n    }\r\n\r\n    render() {\r\n        // Allow items to be rendered on the Engine\r\n        this._scene.init();\r\n    }\r\n\r\n    bindInput() {\r\n        document.addEventListener('keydown', (e: KeyboardEvent) => this.onInput(e));\r\n    }\r\n\r\n    /**\r\n     * Handles the Keyboard Event for the application\r\n     * @param e \r\n     */\r\n    onInput(e: KeyboardEvent) {\r\n        this._scene.onInput(e);\r\n    }\r\n\r\n    setDebug() {\r\n        this._debug = true;\r\n    }\r\n\r\n    update() {\r\n        // Make modification to the state and POS \r\n    }\r\n\r\n    useArcadeFont() {\r\n        if (this.stage && this.gpu) {\r\n            this.gpu.font = 'VT323'; // Set the font to be used for display to give arcade retro styling\r\n        }\r\n    }\r\n\r\n    version() {\r\n        return 'version 1.0.0';\r\n    }\r\n\r\n    clear() {\r\n        this._gpu ? this._gpu.clearRect(0, 0, this._gameWidth, this._gameHeight) : console.error('Context 2D is missing check implementation');\r\n    }\r\n\r\n   \r\n\r\n}\r\n\r\n","// Handles loading the assets for the game that is needed\r\n/**\r\n * @todo Implement sound loader\r\n */\r\nimport { LoDashStatic } from \"lodash\";\r\nimport { IAssetManager } from \"./engine.interface\";\r\n\r\ndeclare var _: LoDashStatic\r\ndeclare var $: JQueryStatic;\r\n\r\n\r\n\r\n\r\n/**\r\n * @todo Implement functionality to allow loading assets via JSON\r\n */\r\nexport class AssetManager implements IAssetManager {\r\n    private assets = {\r\n        'skierCrash': 'img/skier_crash.png',\r\n        'skierLeft': 'img/skier_left.png',\r\n        'skierLeftDown': 'img/skier_left_down.png',\r\n        'skierDown': 'img/skier_down.png',\r\n        'skierRightDown': 'img/skier_right_down.png',\r\n        'skierRight': 'img/skier_right.png',\r\n        'tree': 'img/tree_1.png',\r\n        'treeCluster': 'img/tree_cluster.png',\r\n        'rock1': 'img/rock_1.png',\r\n        'rock2': 'img/rock_2.png',\r\n        'jumpRamp': 'img/jump_ramp.png'\r\n    };\r\n    private _assetResourceList: object = {}; // This stores the list of the assets to be downloaded\r\n\r\n    private _trackingManager = {\r\n        failed: 0,\r\n        passed: 0\r\n    }\r\n\r\n    isDone(){\r\n        return (this._trackingManager.failed + this._trackingManager.passed ) === Object.keys(this.assets).length\r\n    }\r\n    \r\n\r\n    public download(cb: Function) {\r\n        \r\n        _.each(this.assets, (asset, assetName) => {\r\n         \r\n            let resourceImage = new Image();\r\n\r\n            resourceImage.onload = () => {\r\n                resourceImage.width /= 2;\r\n                resourceImage.height /= 2;\r\n                this.setAsset(assetName, resourceImage);\r\n                this._trackingManager.passed++;\r\n                if(this.isDone()){\r\n                    cb();\r\n                }\r\n                \r\n            }\r\n\r\n            resourceImage.onerror = (e) => {\r\n                this._trackingManager.failed++;\r\n                if(this.isDone()){\r\n                    cb();\r\n                }\r\n            }\r\n            //Set the resource to the source to trigger the events\r\n            resourceImage.src = asset;\r\n        });\r\n        \r\n    }\r\n\r\n    setAsset(name: string, resource: any) {\r\n        this._assetResourceList[name] = resource;\r\n    }\r\n    getAsset(name: string) {\r\n        if (!this._assetResourceList[name]) {\r\n            console.error(' Asset has not been defined in the resource list');\r\n        }\r\n        return this._assetResourceList[name];\r\n    }\r\n\r\n}","import { IRenderable, IRenderableSize, IRenderableOffsetPosition, IRenderableBoundingBox, ICanRendererContext } from \"../engine.interface\";\r\nimport { CerosEngine } from \"../CerosEngine\";\r\n\r\nexport class BaseEntity implements IRenderable {\r\n    resource: HTMLImageElement; // Most likely will be an image\r\n    size: IRenderableSize;\r\n    position: IRenderableOffsetPosition;\r\n    boundbox: IRenderableBoundingBox\r\n    offset: number = 0;\r\n\r\n    constructor(src: any, size: IRenderableSize, pos: IRenderableOffsetPosition){\r\n        this.resource = src;\r\n        this.size = size;\r\n        this.position = pos;\r\n    }\r\n\r\n    calculateRect(){\r\n        this.boundbox = {\r\n            bottom: this.position.y + this.resource.height,\r\n            top: this.position.y - ( this.resource.height - this.offset ),\r\n            left: this.position.x - this.resource.width,\r\n            right: this.position.x + this.resource.width \r\n        }\r\n    }\r\n    render(engine: CerosEngine): void {\r\n        engine.gpu.drawImage(this.resource,this.position.x,this.position.y,this.size.width,this.size.height)\r\n    }\r\n}","import { IRenderableSize, IRenderableOffsetPosition, IRenderable, ICanRendererContext } from \"../engine.interface\";\r\nimport { BaseEntity } from \"./BaseEntity\";\r\nimport { CerosEngine } from \"../CerosEngine\";\r\n\r\nexport class Tree extends BaseEntity implements IRenderable, ICanRendererContext{\r\n\r\n    constructor(src: any, size: IRenderableSize, pos: IRenderableOffsetPosition) {\r\n        super(src, size, pos);\r\n    }\r\n    render(engine: CerosEngine): void {\r\n        engine.gpu.drawImage(this.resource,this.position.x,this.position.y,this.size.width,this.size.height)\r\n    }\r\n}","import { IRenderableSize, IRenderableOffsetPosition, IRenderable, ICanRendererContext } from \"../engine.interface\";\r\nimport { BaseEntity } from \"./BaseEntity\";\r\nimport { CerosEngine } from \"../CerosEngine\";\r\n\r\nexport enum ROCKTYPE {\r\n    ROCK1 = 1,\r\n    ROCK2 = 2\r\n};\r\n\r\nexport class Rock extends BaseEntity implements IRenderable, ICanRendererContext {\r\n    public rockType: ROCKTYPE\r\n\r\n    constructor(src: any, size: IRenderableSize, pos: IRenderableOffsetPosition, type: ROCKTYPE) {\r\n        super(src, size, pos);\r\n        this.rockType = type;\r\n    }\r\n\r\n\r\n\r\n}","import { IRenderableSize, IRenderableOffsetPosition, IRenderable, ICanRendererContext } from \"../engine.interface\";\r\nimport { BaseEntity } from \"./BaseEntity\";\r\n\r\nexport class JumpRamp extends BaseEntity implements IRenderable, ICanRendererContext {\r\n\r\n\r\n    constructor(src: any, size: IRenderableSize, pos: IRenderableOffsetPosition) {\r\n        super(src, size, pos);\r\n    }\r\n  \r\n\r\n}","import { IRenderable, IRenderableSize, IRenderableOffsetPosition, ICanRendererContext } from \"../engine.interface\";\r\nimport { BaseEntity } from \"./BaseEntity\";\r\n\r\nexport class TreeCluster extends BaseEntity implements IRenderable , ICanRendererContext{\r\n    constructor(src: any, size: IRenderableSize, pos: IRenderableOffsetPosition) {\r\n        super(src, size, pos);\r\n    }\r\n    \r\n\r\n}","import { IRenderable, IRenderableSize, IRenderableOffsetPosition, IGameEngine, ICanRendererContext } from \"../engine.interface\";\r\nimport { BaseEntity } from \"./BaseEntity\";\r\nimport { CerosEngine } from \"../CerosEngine\";\r\n\r\n\r\n\r\nexport class Skier extends BaseEntity implements IRenderable, ICanRendererContext {\r\n  \r\n\r\n    constructor(src: any, size: IRenderableSize, pos: IRenderableOffsetPosition) {\r\n        super(src, size, pos);\r\n    }\r\n    // Override \r\n    render(engine: CerosEngine): void {\r\n        engine.gpu.drawImage(this.resource,this.position.x,this.position.y,this.size.width,this.size.height)\r\n    }\r\n\r\n    \r\n\r\n}","import { IRenderable } from \"../engine.interface\";\r\n\r\nexport class Hitbox {\r\n\r\n    hasCollided(rect1: IRenderable, rect2: IRenderable): boolean {\r\n        if (rect1.position.x < rect2.position.x + rect2.size.width &&\r\n            rect1.position.x + rect1.size.width > rect2.position.x &&\r\n            rect1.position.y < rect2.position.y + rect2.size.height &&\r\n            rect1.position.y + rect1.size.height > rect2.position.y) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}","// This Class handles the whole logic of placing objects on the screen, handling collision detection and also \r\n\r\nimport { CerosEngine } from \"./CerosEngine\";\r\nimport { IRenderable, IGameScene, IRenderableOffsetPosition } from \"./engine.interface\";\r\nimport { LoDashStatic } from \"lodash\";\r\nimport { Tree } from './entity/Tree';\r\nimport { Rock, ROCKTYPE } from './entity/Rock';\r\nimport { JumpRamp } from './entity/JumpRamp';\r\nimport { TreeCluster } from './entity/TreeCluster'\r\nimport { AssetManager } from \"./AssetManager\";\r\nimport { Skier } from './entity/Skier';\r\nimport { Hitbox } from \"./collision/Hitbox\";\r\n\r\ndeclare var _: LoDashStatic;\r\n\r\n// The Items that should be randomly generated to the screen\r\nconst renderableTypes = [\r\n    'tree',\r\n    'treeCluster',\r\n    'rock1',\r\n    'rock2',\r\n    'jump'\r\n];\r\n\r\n// Global variables for the Scene to use\r\nvar skierDirection = 5;\r\nvar skierMapX = 0;\r\nvar skierMapY = 0;\r\nvar skierSpeed = 8;\r\n\r\nconst KeyboardMappings = {\r\n    LEFT: 37,\r\n    RIGHT: 39,\r\n    UP: 38,\r\n    DOWN: 40\r\n}\r\n\r\n\r\n// dealing with the pausing and stop via the engine\r\nexport class Scene implements IGameScene {\r\n\r\n    private _engine: CerosEngine;\r\n\r\n    public title;\r\n\r\n    public renderableList: IRenderable[] = []; // This list contains the items to be rendered to the canvas\r\n\r\n    private skier: Skier;\r\n\r\n    private collision: Hitbox;\r\n\r\n    constructor() {\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n    setEngine(engine: CerosEngine) {\r\n        this._engine = engine;\r\n    }\r\n    init() {\r\n        //Set the AssetMgr\r\n        const assetMgr = this._engine.assetManager;\r\n\r\n        // Set a default instance we will update the same resource\r\n        const asset = assetMgr.getAsset('skierDown') as HTMLImageElement;\r\n        this.skier = new Skier(asset, { width: asset.width, height: asset.height }, { x: 0, y: 0 });\r\n\r\n        // Setup the collision system\r\n        this.collision = new Hitbox();\r\n        this.initialSetup();\r\n        requestAnimationFrame((t) => this.render(t));\r\n    }\r\n\r\n    onInput(e: KeyboardEvent) {\r\n        switch (e.keyCode) {\r\n            case KeyboardMappings.LEFT: // left\r\n                if (skierDirection === 1) {\r\n                    skierMapX -= skierSpeed;\r\n                    this.placeNewObstacle(skierDirection);\r\n                }\r\n                else {\r\n                    skierDirection--;\r\n                }\r\n                e.preventDefault();\r\n                break;\r\n            case KeyboardMappings.RIGHT: // right\r\n                if (skierDirection === 5) {\r\n                    skierMapX += skierSpeed;\r\n                    this.placeNewObstacle(skierDirection);\r\n                }\r\n                else {\r\n                    skierDirection++;\r\n                }\r\n                e.preventDefault();\r\n                break;\r\n            case KeyboardMappings.UP: // up\r\n                if (skierDirection === 1 || skierDirection === 5) {\r\n                    skierMapY -= skierSpeed;\r\n                    this.placeNewObstacle(6);\r\n                }\r\n                e.preventDefault();\r\n                break;\r\n            case KeyboardMappings.DOWN: // down\r\n                skierDirection = 3;\r\n                e.preventDefault();\r\n                break;\r\n        }\r\n    }\r\n\r\n    render(e) {\r\n        this._engine.gpu.save();\r\n        this._engine.gpu.scale(window.devicePixelRatio, window.devicePixelRatio);\r\n        this._engine.clear();\r\n        this.moveSkier();\r\n        this.checkIfSkierHitObstacle();\r\n        this.drawSkier();\r\n        this.drawObstacles();\r\n        this._engine.gpu.restore();\r\n        requestAnimationFrame((e) => this.render(e));\r\n        console.log('Rendering...');\r\n        console.log('Direction: %s, MapX: %s, MapY: %s, speed: %s', skierDirection,skierMapX,skierMapY,skierSpeed);\r\n    }\r\n    update() {\r\n\r\n    }\r\n    initialSetup() {\r\n        // Create the obstacles to be rendered to the screen\r\n        const { w, h } = this._engine.dimension;\r\n        let renderableItems = Math.ceil(_.random(5, 7) *\r\n            (w / 800) * (h / 500));\r\n\r\n        var minX = -50;\r\n        var maxX = w + 50;\r\n        var minY = h / 2 + 100;\r\n        var maxY = h + 50;\r\n\r\n        for (var idx = 0; idx < renderableItems; idx++) {\r\n            this.drawRandomRenderables(minX, maxX, minY, maxY);\r\n        }\r\n\r\n        this.renderableList = _.sortBy(this.renderableList, function (obstacle) {\r\n            var obstacleImage = obstacle.resource;\r\n            return obstacle.position.y + obstacleImage.height;\r\n        });\r\n\r\n\r\n    }\r\n\r\n    moveSkier() {\r\n        switch (skierDirection) {\r\n            case 2:\r\n                skierMapX -= Math.round(skierSpeed / 1.4142);\r\n                skierMapY += Math.round(skierSpeed / 1.4142);\r\n\r\n                this.placeNewObstacle(skierDirection);\r\n                break;\r\n            case 3:\r\n                skierMapY += skierSpeed;\r\n\r\n                this.placeNewObstacle(skierDirection);\r\n                break;\r\n            case 4:\r\n                skierMapX += skierSpeed / 1.4142;\r\n                skierMapY += skierSpeed / 1.4142;\r\n\r\n                this.placeNewObstacle(skierDirection);\r\n                break;\r\n        }\r\n    }\r\n\r\n    private drawRandomRenderables(minX, maxX, minY, maxY) {\r\n        const assetMgr = this._engine.assetManager;\r\n        let renderableIndex = _.random(0, renderableTypes.length - 1);\r\n\r\n        var position = this.calculateOpenPosition(minX, maxX, minY, maxY);\r\n\r\n        // Get the renderable type and push to the Renderable List to be displayed\r\n        const renderType = renderableTypes[renderableIndex];\r\n\r\n        let renderable: IRenderable = null;\r\n        let asset: HTMLImageElement = null;\r\n\r\n        switch (renderType) {\r\n            case 'tree':\r\n                asset = assetMgr.getAsset('tree');\r\n                renderable = new Tree(asset, {\r\n                    height: asset.width,\r\n                    width: asset.height\r\n                }, {\r\n                    x: position.x,\r\n                    y: position.y + asset.height\r\n                });\r\n\r\n                break;\r\n            case 'treeCluster':\r\n                asset = assetMgr.getAsset('treeCluster');\r\n                renderable = new TreeCluster(asset, {\r\n                    height: asset.width,\r\n                    width: asset.height\r\n                }, {\r\n                    x: position.x,\r\n                    y: position.y + asset.height\r\n                });\r\n                this.renderableList.push(renderable);\r\n                break;\r\n            case 'rock1':\r\n                asset = assetMgr.getAsset('rock1');\r\n                renderable = new Rock(asset, {\r\n                    height: asset.width,\r\n                    width: asset.height\r\n                }, {\r\n                    x: position.x,\r\n                    y: position.y + asset.height\r\n                }, ROCKTYPE.ROCK1);\r\n                break;\r\n            case 'rock2':\r\n                asset = assetMgr.getAsset('rock2');\r\n                renderable = new Rock(asset, {\r\n                    height: asset.width,\r\n                    width: asset.height\r\n                }, {\r\n                    x: position.x,\r\n                    y: position.y + asset.height\r\n                }, ROCKTYPE.ROCK2);\r\n                break;\r\n            case 'jump':\r\n                asset = assetMgr.getAsset('jumpRamp');\r\n                renderable = new JumpRamp(asset, {\r\n                    height: asset.width,\r\n                    width: asset.height\r\n                }, {\r\n                    x: position.x,\r\n                    y: position.y + asset.height\r\n                });\r\n                break;\r\n\r\n        }\r\n        this.renderableList.push(renderable);\r\n    }\r\n\r\n    getSkierAsset() {\r\n        var skierAssetName;\r\n        switch (skierDirection) {\r\n            case 0:\r\n                skierAssetName = 'skierCrash';\r\n                break;\r\n            case 1:\r\n                skierAssetName = 'skierLeft';\r\n                break;\r\n            case 2:\r\n                skierAssetName = 'skierLeftDown';\r\n                break;\r\n            case 3:\r\n                skierAssetName = 'skierDown';\r\n                break;\r\n            case 4:\r\n                skierAssetName = 'skierRightDown';\r\n                break;\r\n            case 5:\r\n                skierAssetName = 'skierRight';\r\n                break;\r\n        }\r\n\r\n        return skierAssetName;\r\n    }\r\n\r\n\r\n    calculateOpenPosition(minX, maxX, minY, maxY): IRenderableOffsetPosition {\r\n        var x = _.random(minX, maxX);\r\n        var y = _.random(minY, maxY);\r\n\r\n        var foundCollision = _.find(this.renderableList, function (obstacle) {\r\n            return x > (obstacle.position.x - 50) && x < (obstacle.position.x + 50) && y > (obstacle.position.y - 50) && y < (obstacle.position.y + 50);\r\n        });\r\n\r\n        if (foundCollision) {\r\n            return this.calculateOpenPosition(minX, maxX, minY, maxY);\r\n        }\r\n        else {\r\n            return {\r\n                x: x,\r\n                y: y\r\n            }\r\n        }\r\n    }\r\n\r\n    drawObstacles() {\r\n        // Get Engine for measurement size\r\n        const { w, h } = this.getDimension();\r\n        let newObstacles = [];\r\n\r\n        _.each(this.renderableList, (obstacle) => {\r\n            var obstacleImage = obstacle.resource; // Image resource\r\n            var x = obstacle.position.x - skierMapX - obstacleImage.width / 2;\r\n            var y = obstacle.position.y - skierMapY - obstacleImage.height / 2;\r\n\r\n            if (x < -100 || x > + 50 || y < -100 || y > h + 50) {\r\n                return;\r\n            }\r\n\r\n            //ctx.drawImage(obstacleImage, x, y, obstacleImage.width, obstacleImage.height);\r\n            // Each obstacle should be drawn to the screen\r\n            obstacle.render(this._engine);\r\n            newObstacles.push(obstacle);\r\n        });\r\n\r\n        this.renderableList = newObstacles;\r\n\r\n    }\r\n\r\n    drawSkier() {\r\n        const { w, h } = this.getDimension();\r\n        var skierAssetName = this.getSkierAsset();\r\n        var skierImage = this._engine.assetManager.getAsset(skierAssetName) as HTMLImageElement;\r\n        var x = (w - skierImage.width) / 2;\r\n        var y = (h - skierImage.height) / 2;\r\n\r\n        //ctx.drawImage(skierImage, x, y, skierImage.width, skierImage.height); \r\n        this.skier.position = {\r\n            x,\r\n            y\r\n        };\r\n\r\n        this.skier.size = {\r\n            width: skierImage.width,\r\n            height: skierImage.height\r\n        };\r\n\r\n        this.skier.render(this._engine);\r\n    }\r\n\r\n    placeNewObstacle(direction) {\r\n        const { w, h } = this.getDimension();\r\n        var shouldPlaceObstacle = _.random(1, 8);\r\n        if (shouldPlaceObstacle !== 8) {\r\n            return;\r\n        }\r\n\r\n        var leftEdge = skierMapX;\r\n        var rightEdge = skierMapX + w;\r\n        var topEdge = skierMapY;\r\n        var bottomEdge = skierMapY + h;\r\n\r\n        switch (direction) {\r\n            case 1: // left\r\n                this.drawRandomRenderables(leftEdge - 50, leftEdge, topEdge, bottomEdge);\r\n                break;\r\n            case 2: // left down\r\n                this.drawRandomRenderables(leftEdge - 50, leftEdge, topEdge, bottomEdge);\r\n                this.drawRandomRenderables(leftEdge, rightEdge, bottomEdge, bottomEdge + 50);\r\n                break;\r\n            case 3: // down\r\n                this.drawRandomRenderables(leftEdge, rightEdge, bottomEdge, bottomEdge + 50);\r\n                break;\r\n            case 4: // right down\r\n                this.drawRandomRenderables(rightEdge, rightEdge + 50, topEdge, bottomEdge);\r\n                this.drawRandomRenderables(leftEdge, rightEdge, bottomEdge, bottomEdge + 50);\r\n                break;\r\n            case 5: // right\r\n                this.drawRandomRenderables(rightEdge, rightEdge + 50, topEdge, bottomEdge);\r\n                break;\r\n            case 6: // up\r\n                this.drawRandomRenderables(leftEdge, rightEdge, topEdge - 50, topEdge);\r\n                break;\r\n        }\r\n    }\r\n\r\n    getDimension() {\r\n        return this._engine.dimension;\r\n    }\r\n\r\n    checkIfSkierHitObstacle() {\r\n        // Check if the Skier has hit any obstacle\r\n        var collision = _.find(this.renderableList, (obstacle) => {\r\n            obstacle.offset = 5;\r\n\r\n            return this.collision.hasCollided(this.skier, obstacle);\r\n        });\r\n\r\n        if (collision) {\r\n            skierDirection = 0;\r\n        }\r\n    }\r\n\r\n}","/**\r\n * @author Okeowo Aderemi\r\n * @description This is the main application that bootstraps the application\r\n */\r\nimport { CerosEngine } from './engine/CerosEngine';\r\nimport { AssetManager } from './engine/AssetManager';\r\nimport { Scene } from './engine/Scene';\r\ndocument.addEventListener('DOMContentLoaded', (event: Event) => {\r\n    // Start the main application here\r\n    \r\n    const asset = new AssetManager;\r\n    \r\n    asset.download(() => {\r\n        const engine = new CerosEngine();\r\n        engine.assetManager = asset;\r\n        const scene = new Scene();\r\n        engine.init(scene);\r\n        console.log('Gaming Engine runs now...with Scene')\r\n        \r\n        \r\n    });\r\n    \r\n});","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}